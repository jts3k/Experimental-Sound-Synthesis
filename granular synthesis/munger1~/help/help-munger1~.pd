#N canvas 122 28 1043 668 10;
#X floatatom 7 599 0 0 100 0 - - -;
#N canvas 331 136 786 621 output 0;
#X obj 455 510 t b;
#X obj 455 450 f;
#X obj 455 390 inlet;
#X obj 455 540 f;
#X msg 566 532 0;
#X msg 455 420 bang;
#X obj 455 480 moses 1;
#X obj 566 502 t b f;
#X obj 535 460 moses 1;
#X obj 107 121 dbtorms;
#X obj 535 430 r master-lvl;
#X obj 107 27 r master-lvl;
#X obj 455 570 s master-lvl;
#X obj 95 227 inlet~;
#X obj 250 258 inlet;
#X obj 268 283 s master-lvl;
#X msg 119 57 set \$1;
#X obj 119 87 outlet;
#X msg 250 309 \; pd dsp 1;
#X obj 107 181 line~;
#X obj 96 257 *~;
#X obj 107 151 pack 0 50;
#X text 23 205 audio in;
#X text 2 313 out both channels;
#X text 273 182 Level input. Send to master-lvl and start DSP (we infer
that if you're changing the level you want to hear the network.) If
you start DSP when it's already running there's no effect.;
#X text 59 542 here is the previous nonzero master-lvl -->;
#X text 98 451 recall previous value of master-lvl -->;
#X text 239 482 test if less than 1 -->;
#X text 203 510 if true convert to bang -->;
#X text 218 351 Mute control. If the master level is zero \, restore
to the last nonzero one \, otherwise zero it.;
#X text 182 86 <-- update the number box to show new level;
#X text 178 120 <-- convert from dB to linear units;
#X text 196 150 <-- make a smooth ramp to avoid clicks or zipper noise
;
#X text 333 318 <-- automatically start DSP;
#X obj 36 228 inlet~;
#X obj 36 258 *~;
#X obj 64 290 dac~;
#X obj 35 346 send~ left;
#X obj 97 346 send~ right;
#X connect 0 0 3 0;
#X connect 1 0 6 0;
#X connect 2 0 5 0;
#X connect 3 0 12 0;
#X connect 4 0 12 0;
#X connect 5 0 1 0;
#X connect 6 0 0 0;
#X connect 6 1 7 0;
#X connect 7 0 4 0;
#X connect 8 1 3 1;
#X connect 9 0 21 0;
#X connect 10 0 1 1;
#X connect 10 0 8 0;
#X connect 11 0 9 0;
#X connect 11 0 16 0;
#X connect 13 0 20 0;
#X connect 14 0 15 0;
#X connect 14 0 18 0;
#X connect 16 0 17 0;
#X connect 19 0 20 1;
#X connect 19 0 35 1;
#X connect 20 0 36 1;
#X connect 20 0 38 0;
#X connect 21 0 19 0;
#X connect 34 0 35 0;
#X connect 35 0 36 0;
#X connect 35 0 37 0;
#X restore -3 621 pd output;
#X text 24 79 by dan trueman \,;
#X text 23 88 computer music;
#X text 23 97 center \, columbia;
#X text 24 105 university;
#X msg 32 599 mute;
#X text 11 16 stereo granulator...;
#X text 11 31 munger~ takes a signal input;
#X text 9 41 and granulates it \, allowing for;
#X text 9 51 different transposition and;
#X text 615 6 the 'voices' message tells the munger how many grains
to;
#X text 613 26 cpu intensive. you can smoothly sweep this parameter.
;
#X text 9 60 granular sampling effects.;
#X text 613 35 'maxvoices' sets an upper limit to this \, and will
have some;
#X text 616 45 impact on performance if set really high (20 by default.)
;
#X text 615 79 'ramptime' sets the length (in ms) of the ramping envelope
;
#X text 613 89 on each grain. if the grain is smaller than the ramptime
\,;
#X text 613 99 the ramptime will be scaled to half the grain size.
;
#X text 613 121 turn the munger on and off \, to save CPU. (1) by default.
;
#X text 611 131 (NOTE: this was responsible for a bug in the previous
;
#X text 614 140 versions of munger which resulted in frustratingly
silent;
#X text 614 149 mungers. fixed now \, I believe.);
#X text 616 172 constrain how far back in time the munger looks for
grains.;
#X text 614 182 the smaller this is \, the smaller the largest grain
can be.;
#X text 614 192 the numnger's argument sets the maximum delay length
;
#X text 615 201 possible ( and the default value for delaylength.)
this is a;
#X text 616 211 super cool parameter to mess with.;
#X text 618 231 allows grains to play backwards and forwards (0) \,
just;
#X text 616 241 forward (1) \, or just backwards (-1). (0) by default.
;
#X text 618 265 sets the minimum allowable grainsize. useful when;
#X text 616 275 randomizing with the 'grain size variation' input.
;
#X text 621 306 turn recording on and off. turning off freezes the
buffer;
#X text 619 316 on (1) by default.;
#X text 621 338 set the playback position within the buffer (between
0 and;
#X text 622 348 1.) -1 = randomized position (which is the default.)
It is;
#X text 622 358 possible to get some interesting stretching effect
by;
#X text 621 368 scrubbing through this with 'record' on \, and some
good;
#X text 622 377 transposition effects with 'record' off.;
#X text 625 397 set the baseline gain for grains (1 by default) \,
and set a;
#X text 623 407 randomization range around that baseline (0 by default.)
;
#X text 626 429 apply pitch sieves to the grains. control how deeply
into;
#X text 624 438 these sieves to go with the 'grain pitch variation'
input;
#X text 624 448 (below.) floats work too. set to 'smooth' (no sieve)
by;
#X text 624 457 default.;
#X text 480 557 posts the values of user controlled variables to the
;
#X text 479 568 console;
#X text 480 579 impolitely clears the internal sample buffer.;
#X text 11 498 grain;
#X text -2 507 separation;
#X text 64 507 variation;
#X text 128 498 grain;
#X text 128 507 size;
#X text 248 503 grain;
#X text 249 512 pitch;
#X text 297 512 variation;
#X text 298 494 grain;
#X text 297 503 pitch;
#X text 361 504 stereo;
#X text 361 512 spread;
#X text 62 491 grain;
#X text 64 500 rate;
#X obj 182 27 loadbang;
#X obj 182 48 tgl 15 0 empty empty empty 0 -6 0 8 -262144 -1 -1 1 1
;
#X obj 182 66 metro 250;
#X obj 182 86 counter 0 15;
#N canvas 0 0 450 300 (subpatch) 0;
#X array mycoll 16 float 1;
#A 0 57 45 57 57 45 57 57 47 55 47 59 60 60 57 57 57;
#X coords 0 72 15 40 100 70 1;
#X restore 57 133 graph;
#X obj 182 107 tabread mycoll;
#X obj 181 129 sel 0;
#X obj 181 153 mtof;
#X obj 181 178 * 2;
#X msg 206 200 20;
#X obj 181 222 line~;
#X obj 181 245 osc~ 200;
#X text 429 11 send some messages...;
#X msg 431 45 voices \$1;
#X msg 436 102 ramptime \$1;
#X obj 439 122 tgl 15 0 empty empty empty 0 -6 0 8 -262144 -1 -1 1
1;
#X msg 439 140 power \$1;
#X msg 441 239 ambidirectional \$1;
#X msg 441 268 minsize 5;
#X obj 443 292 tgl 15 1 empty empty empty 0 -6 0 8 -262144 -1 -1 1
1;
#X msg 443 310 record \$1;
#X msg 444 358 position \$1;
#X msg 446 400 gain \$1;
#X msg 446 419 rand_gain \$1;
#X msg 446 446 smooth;
#X msg 446 466 tempered;
#X msg 446 486 scale 0 4 7 -2 12 15;
#X msg 446 506 scale 0 4 4 4 7 7 11 11 14 18 -12 -12 -12;
#X msg 446 559 state;
#X msg 446 579 clear;
#X obj -54 526 r msgs;
#X obj 403 507 s msgs;
#X obj 396 166 s msgs;
#X msg 83 296 1;
#X msg 88 315 2;
#X msg 94 334 3;
#X text 26 243 select a sound source;
#X text 37 291 oscil;
#X text 28 301 sequence;
#X text 34 319 sample;
#N canvas 0 0 473 362 choose 0;
#X obj 78 50 inlet;
#X obj 94 93 sel 1 2 3;
#X msg 108 122 1 0 0;
#X msg 114 143 0 1 0;
#X msg 121 164 0 0 1;
#X obj 138 188 unpack 0 0 0;
#X obj 240 52 inlet~;
#X obj 297 52 inlet~;
#X obj 354 52 inlet~;
#X obj 240 223 *~ 0;
#X obj 303 221 *~ 0;
#X obj 373 225 *~ 0;
#X obj 346 257 +~;
#X obj 280 289 +~;
#X obj 287 331 outlet~;
#X floatatom 121 223 5 0 0 0 - - -;
#X floatatom 156 221 5 0 0 0 - - -;
#X floatatom 190 221 5 0 0 0 - - -;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 3 0;
#X connect 1 2 4 0;
#X connect 2 0 5 0;
#X connect 3 0 5 0;
#X connect 4 0 5 0;
#X connect 5 0 9 1;
#X connect 5 0 15 0;
#X connect 5 1 10 1;
#X connect 5 1 16 0;
#X connect 5 2 11 1;
#X connect 5 2 17 0;
#X connect 6 0 9 0;
#X connect 7 0 10 0;
#X connect 8 0 11 0;
#X connect 9 0 13 0;
#X connect 10 0 12 0;
#X connect 11 0 12 1;
#X connect 12 0 13 1;
#X connect 13 0 14 0;
#X restore 82 370 pd choose;
#X obj 249 144 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 249 162 openpanel;
#X obj 249 201 soundfiler;
#N canvas 0 0 450 300 (subpatch) 0;
#X array mysample 182592 float 0;
#X coords 0 1 182591 -1 100 70 1;
#X restore 276 69 graph;
#X obj 147 335 adc~;
#X text 52 340 adc;
#X msg 249 181 read -resize \$1 mysample;
#X floatatom 248 257 12 0 0 0 - - -;
#X obj 248 338 phasor~;
#X floatatom 248 221 20 0 0 0 - - -;
#X obj 248 237 expr (60000/$f1);
#X obj 248 294 f;
#X obj 248 275 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 248 317 * 1;
#X text 311 207 length in samples;
#X obj 83 274 loadbang;
#X obj 300 336 snapshot~;
#X floatatom 300 359 5 0 0 0 - - -;
#X obj 300 312 metro 20;
#X obj 300 290 tgl 15 0 empty empty empty 0 -6 0 8 -262144 -1 -1 0
1;
#X obj 247 383 tabread4~ mysample;
#X obj 247 361 *~ 88200;
#X text 196 502 grain;
#X text 186 510 size var;
#X obj 450 85 nbx 5 14 0 1e+037 0 1 empty empty empty 0 -6 0 10 -262144
-1 -1 1000 256;
#X obj 424 27 nbx 5 14 0 500 0 1 empty empty empty 0 -6 0 10 -262144
-1 -1 15 256;
#X obj 445 168 nbx 5 14 0 1e+037 0 1 empty empty empty 0 -6 0 10 -262144
-1 -1 3000 256;
#X obj 444 219 nbx 5 14 -1 1 0 1 empty empty empty 0 -6 0 10 -262144
-1 -1 0 256;
#X obj 444 335 nbx 5 14 -1 1 0 1 empty empty empty 0 -6 0 10 -262144
-1 -1 -1 256;
#X obj 446 376 nbx 5 14 0 1e+037 0 1 empty empty empty 0 -6 0 10 -262144
-1 -1 1 256;
#X obj 509 400 nbx 5 14 0 32767 0 1 empty empty empty 0 -6 0 10 -262144
-1 -1 0 256;
#X obj 353 529 nbx 5 14 0 10 0 1 empty empty empty 0 -6 0 10 -262144
-1 -1 1 256;
#X obj 296 528 nbx 5 14 0 100 0 1 empty empty empty 0 -6 0 10 -262144
-1 -1 0 256;
#X obj 240 527 nbx 5 14 0 1e+037 0 1 empty empty empty 0 -6 0 10 -262144
-1 -1 1 256;
#X obj 183 527 nbx 5 14 0 1e+037 0 1 empty empty empty 0 -6 0 10 -262144
-1 -1 10 256;
#X obj 126 526 nbx 5 14 0 1e+037 0 1 empty empty empty 0 -6 0 10 -262144
-1 -1 50 256;
#X obj 68 526 nbx 5 14 0 1e+037 0 1 empty empty empty 0 -6 0 10 -262144
-1 -1 0 256;
#X obj 11 525 nbx 5 14 0 1e+037 0 1 empty empty empty 0 -6 0 10 -262144
-1 -1 0 256;
#X msg 446 526 scale 0 -2 2 -4 4 -6 6 -8 8 -10 10 -12 12 -14 14 -16
16 -18 18 -20 20;
#X obj 562 31 loadbang;
#X msg 581 98 1;
#X obj 244 458 loadbang;
#X obj 871 525 vu 15 120 empty empty -1 -8 0 8 -66577 -1 1 0;
#X obj 870 485 env~ 16384;
#X obj 800 525 vu 15 120 empty empty -1 -8 0 8 -66577 -1 1 0;
#X obj 799 485 env~ 16384;
#X obj 799 504 - 99;
#X obj 870 504 - 99;
#X obj 799 466 receive~ left;
#X obj 871 466 receive~ right;
#X msg 333 45 verbose \$1;
#X obj 333 28 nbx 5 14 0 3 0 1 empty empty empty 0 -8 0 10 -262144
-1 -1 2 256;
#X text 11 2 munger~;
#X text 227 3 pd console verbosity;
#X text 227 14 0 - none;
#X msg 439 195 delaylength_ms \$1;
#X text 228 23 1 - critical(default);
#X msg 133 474 oneshot \$1;
#X obj 133 456 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 47 474 buffer mysample;
#X obj 564 182 vsl 15 128 0 1 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 0 1;
#X obj 11 353 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 4 273 nbx 5 14 -1e+037 1e+037 0 0 empty empty empty 0 -8 0 10
-262144 -1 -1 0 256;
#N canvas 0 0 490 272 optional_arguments 0;
#X text 75 41 and allocates memory \, so be careful with large values.
;
#X text 72 51 (3000ms by default.) this also constrains the maximum
;
#X text 74 60 grain size \, to 1/3rd the maximum delay time.;
#X text 51 12 optional arguments:;
#X text 64 32 1 sets the maximum delay time (in ms);
#X text 62 91 3 either optional max voices (default 50) or name;
#X text 71 100 (optional). If more than one munger1~ object is used
;
#X text 74 110 in the same patch \, this enables easier tracking of
the;
#X text 73 120 PD console output.;
#X text 59 135 4 if optional max voices was set as third argument;
#X text 71 145 this argument is used for the name instead. Alternately
\,;
#X text 71 154 last argument can be also used for extending the visual
;
#X text 72 164 width of the object by typing _____. This can be also
;
#X text 71 173 used as the 3rd argument in which case all arguments
that;
#X text 70 181 follow are ignored.;
#X text 38 207 IMPORTANT! In order to be able to name any instance
\, you;
#X text 40 215 must provide arguments first 3 arguments. Old 1-argument
;
#X text 38 223 format is provided for backwards compatibilitiy purposes.
;
#X text 63 76 2 sets number of output channels 2-64 (2 by default)
;
#X restore 72 608 pd optional_arguments;
#X obj 206 596 send~ four;
#X obj 240 576 send~ five;
#X obj 261 596 send~ six;
#X obj 295 576 send~ seven;
#X obj 180 576 send~ three;
#X obj 311 596 send~ eight;
#N canvas 0 0 607 390 8chVU 0;
#X obj 235 244 vu 15 120 empty empty -1 -8 0 8 -66577 -1 1 0;
#X obj 234 204 env~ 16384;
#X obj 234 223 - 99;
#X obj 164 244 vu 15 120 empty empty -1 -8 0 8 -66577 -1 1 0;
#X obj 163 204 env~ 16384;
#X obj 163 223 - 99;
#X obj 93 244 vu 15 120 empty empty -1 -8 0 8 -66577 -1 1 0;
#X obj 92 204 env~ 16384;
#X obj 92 223 - 99;
#X obj 22 244 vu 15 120 empty empty -1 -8 0 8 -66577 -1 1 0;
#X obj 21 204 env~ 16384;
#X obj 21 223 - 99;
#X obj 21 140 receive~ left;
#X obj 517 244 vu 15 120 empty empty -1 -8 0 8 -66577 -1 1 0;
#X obj 516 204 env~ 16384;
#X obj 516 223 - 99;
#X obj 446 244 vu 15 120 empty empty -1 -8 0 8 -66577 -1 1 0;
#X obj 445 204 env~ 16384;
#X obj 445 223 - 99;
#X obj 375 244 vu 15 120 empty empty -1 -8 0 8 -66577 -1 1 0;
#X obj 374 204 env~ 16384;
#X obj 374 223 - 99;
#X obj 304 244 vu 15 120 empty empty -1 -8 0 8 -66577 -1 1 0;
#X obj 303 204 env~ 16384;
#X obj 303 223 - 99;
#X obj 92 140 receive~ right;
#X obj 163 140 receive~ three;
#X obj 234 140 receive~ four;
#X obj 303 140 receive~ five;
#X obj 374 140 receive~ six;
#X obj 444 140 receive~ seven;
#X obj 516 140 receive~ eight;
#X obj 239 54 dbtorms;
#X obj 239 5 r master-lvl;
#X msg 250 30 set \$1;
#X obj 239 114 line~;
#X obj 239 84 pack 0 50;
#X obj 374 171 *~;
#X obj 164 171 *~;
#X obj 235 171 *~;
#X obj 445 171 *~;
#X obj 516 171 *~;
#X obj 302 171 *~;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 2 0 0 1;
#X connect 4 0 5 0;
#X connect 5 0 3 0;
#X connect 5 0 3 1;
#X connect 7 0 8 0;
#X connect 8 0 6 0;
#X connect 8 0 6 1;
#X connect 10 0 11 0;
#X connect 11 0 9 0;
#X connect 11 0 9 1;
#X connect 12 0 10 0;
#X connect 14 0 15 0;
#X connect 15 0 13 0;
#X connect 15 0 13 1;
#X connect 17 0 18 0;
#X connect 18 0 16 0;
#X connect 18 0 16 1;
#X connect 20 0 21 0;
#X connect 21 0 19 0;
#X connect 21 0 19 1;
#X connect 23 0 24 0;
#X connect 24 0 22 0;
#X connect 24 0 22 1;
#X connect 25 0 7 0;
#X connect 26 0 38 0;
#X connect 27 0 39 0;
#X connect 28 0 42 0;
#X connect 29 0 37 0;
#X connect 30 0 40 0;
#X connect 31 0 41 0;
#X connect 32 0 36 0;
#X connect 33 0 32 0;
#X connect 33 0 34 0;
#X connect 35 0 38 1;
#X connect 35 0 39 1;
#X connect 35 0 42 1;
#X connect 35 0 37 1;
#X connect 35 0 40 1;
#X connect 35 0 41 1;
#X connect 36 0 35 0;
#X connect 37 0 20 0;
#X connect 38 0 4 0;
#X connect 39 0 1 0;
#X connect 40 0 17 0;
#X connect 41 0 14 0;
#X connect 42 0 23 0;
#X restore 263 621 pd 8chVU;
#X msg 446 599 spatialize 0.1 0.5 0.1 0.5 0.1 0.5 0.1 0.5 0.1 0.5 0.1
0.5 0.1 0.5 0.1 0.5;
#X msg 306 421 discretepan \$1;
#X text 306 435 multichannel only option;
#X text 305 445 toggles whether every grain;
#X text 305 454 can be only on one channel;
#X text 306 463 at any given time.;
#X obj 306 405 nbx 5 14 0 1 0 0 empty empty empty 0 -8 0 10 -262144
-1 -1 0 256;
#X obj 11 371 metro 20;
#X msg -29 474 buffer;
#X text -50 458 use internal buffer;
#X text -49 451 revert to or;
#X msg 381 67 maxvoices 500;
#X text 227 32 2 - all;
#X text 227 41 3 - grains/sec;
#X text 445 627 spatialize multichannel grains (gain + rand_gain pairs/ch)
;
#X text 445 636 IMPORTANT! no sound will come out from multichannel
object;
#X text 445 644 until this option is passed through to it;
#X msg 74 402 note 1 1 0.5 500 500 0.9 1000 -1;
#X obj -18 549 munger1~ 3000 8 51 default _________________________________
;
#X text 613 16 allow simultaneously (set to 15 here.) the more \, the
more;
#X text 617 55 munger by default has hardwired max of 50 which can
be;
#X text 450 67 <- click this one...;
#X text 617 64 altered by using 3rd creation argument up to 1000;
#X connect 0 0 1 2;
#X connect 1 0 0 0;
#X connect 6 0 1 3;
#X connect 62 0 63 0;
#X connect 63 0 64 0;
#X connect 64 0 65 0;
#X connect 65 0 67 0;
#X connect 67 0 68 0;
#X connect 68 1 69 0;
#X connect 69 0 70 0;
#X connect 70 0 71 0;
#X connect 70 0 72 0;
#X connect 71 0 72 1;
#X connect 72 0 73 0;
#X connect 73 0 102 1;
#X connect 75 0 94 0;
#X connect 76 0 94 0;
#X connect 77 0 78 0;
#X connect 78 0 94 0;
#X connect 79 0 94 0;
#X connect 80 0 94 0;
#X connect 81 0 82 0;
#X connect 82 0 94 0;
#X connect 83 0 94 0;
#X connect 84 0 93 0;
#X connect 85 0 93 0;
#X connect 86 0 93 0;
#X connect 87 0 93 0;
#X connect 88 0 93 0;
#X connect 89 0 93 0;
#X connect 90 0 93 0;
#X connect 91 0 93 0;
#X connect 92 0 192 0;
#X connect 95 0 102 0;
#X connect 96 0 102 0;
#X connect 97 0 102 0;
#X connect 102 0 192 0;
#X connect 103 0 104 0;
#X connect 104 0 109 0;
#X connect 105 0 112 0;
#X connect 107 0 102 3;
#X connect 109 0 105 0;
#X connect 110 0 114 1;
#X connect 110 0 115 0;
#X connect 110 0 111 1;
#X connect 111 0 124 0;
#X connect 112 0 113 0;
#X connect 113 0 110 0;
#X connect 114 0 116 0;
#X connect 115 0 114 0;
#X connect 116 0 111 0;
#X connect 118 0 95 0;
#X connect 119 0 120 0;
#X connect 121 0 119 0;
#X connect 122 0 121 0;
#X connect 123 0 102 2;
#X connect 123 0 119 0;
#X connect 124 0 123 0;
#X connect 127 0 76 0;
#X connect 128 0 75 0;
#X connect 129 0 158 0;
#X connect 130 0 79 0;
#X connect 131 0 83 0;
#X connect 132 0 84 0;
#X connect 133 0 85 0;
#X connect 134 0 192 7;
#X connect 135 0 192 6;
#X connect 136 0 192 5;
#X connect 137 0 192 4;
#X connect 138 0 192 3;
#X connect 139 0 192 2;
#X connect 140 0 192 1;
#X connect 141 0 93 0;
#X connect 142 0 128 0;
#X connect 142 0 127 0;
#X connect 142 0 143 0;
#X connect 142 0 129 0;
#X connect 142 0 130 0;
#X connect 142 0 131 0;
#X connect 142 0 132 0;
#X connect 142 0 133 0;
#X connect 142 0 87 0;
#X connect 142 0 154 0;
#X connect 142 0 174 0;
#X connect 143 0 77 0;
#X connect 143 0 81 0;
#X connect 144 0 134 0;
#X connect 144 0 135 0;
#X connect 144 0 136 0;
#X connect 144 0 137 0;
#X connect 144 0 138 0;
#X connect 144 0 139 0;
#X connect 144 0 140 0;
#X connect 146 0 150 0;
#X connect 148 0 149 0;
#X connect 149 0 147 0;
#X connect 149 0 147 1;
#X connect 150 0 145 0;
#X connect 150 0 145 1;
#X connect 151 0 148 0;
#X connect 152 0 146 0;
#X connect 153 0 94 0;
#X connect 154 0 153 0;
#X connect 158 0 94 0;
#X connect 160 0 192 0;
#X connect 161 0 160 0;
#X connect 162 0 192 0;
#X connect 163 0 131 0;
#X connect 164 0 181 0;
#X connect 165 0 181 1;
#X connect 174 0 93 0;
#X connect 175 0 93 0;
#X connect 180 0 175 0;
#X connect 181 0 191 0;
#X connect 182 0 192 0;
#X connect 185 0 94 0;
#X connect 191 0 192 0;
#X connect 192 0 1 0;
#X connect 192 1 1 1;
#X connect 192 2 171 0;
#X connect 192 3 167 0;
#X connect 192 4 168 0;
#X connect 192 5 169 0;
#X connect 192 6 170 0;
#X connect 192 7 172 0;
